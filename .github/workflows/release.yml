name: Release

on:
  release:
    types:
      - prereleased
      - released

env:
    ORIGINAL_REPO_NAME: "newrelic/nri-statsd"
    DOCKER_PLATFORMS: "linux/amd64,linux/arm64"
    DOCKER_IMAGE_NAME: newrelic/nri-statsd
    TAG: ${{ github.event.release.tag_name }}
    VERSION: ""
    TAG_SUFFIX: ""

jobs:
  integration-tests:
    name: üöß integration tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [  arm64, amd64 ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.OHAI_DOCKER_HUB_ID }}
          password: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}

      - name: Running integration tests
        run: |
          make integration-tests-${{ matrix.arch }}

  release-integration:
    name: Publish container images to registry
    runs-on: ubuntu-latest
    needs: [integration-tests]
    steps:
        - name: Checkout master
          uses: actions/checkout@v4

        - name: Add pre-release tag suffix
          if: ${{ github.event.release.prerelease }}
          run: |
            echo "TAG_SUFFIX=-pre" >> $GITHUB_ENV
        
        - name: Generate version from tag
          run: |
            TAG_WITHOUT_V=$(echo "${{ env.TAG }}" | sed 's/^v//')
            echo "VERSION=$TAG_WITHOUT_V" >> $GITHUB_ENV
        
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3
        
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        
        - name: Login to DockerHub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.OHAI_DOCKER_HUB_ID }}
            password: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}
        
        - name: Build and push docker image
          uses: docker/build-push-action@v6
          with:
            platforms: ${{ env.DOCKER_PLATFORMS }}
            context: .
            push: true
            tags: |
              ${{ env.DOCKER_IMAGE_NAME }}:${{ env.VERSION }}${{ env.TAG_SUFFIX }}
        
        - name: Push latest tag
          if: ${{ ! github.event.release.prerelease }}
          uses: docker/build-push-action@v5
          with:
            platforms: ${{ env.DOCKER_PLATFORMS }}
            context: .
            push: true
            tags: ${{ env.DOCKER_IMAGE_NAME }}:latest
        
        - name: Update title for successful pre-release
          if: ${{ github.event.release.prerelease }}
          env:
            GH_TOKEN: "${{ secrets.COREINT_BOT_TOKEN }}"
          run: |
            gh release edit ${{ env.TAG }} --title "${{ env.TAG }}"

  notify-failure:
    if: ${{ always() && failure() }}
    needs: [release-integration]
    runs-on: ubuntu-latest
    steps:
      - name: Notify failure via Slack
        uses: archive/github-actions-slack@master
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.COREINT_SLACK_TOKEN }}
          slack-channel: ${{ secrets.COREINT_SLACK_CHANNEL }}
          slack-text: "‚ùå `${{ env.ORIGINAL_REPO_NAME }}`: [image release failed](${{ github.server_url }}/${{ env.ORIGINAL_REPO_NAME }}/actions/runs/${{ github.run_id }})."

  update-title-on-failure:
    if: ${{ always() && failure() }}
    needs: [release-integration]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - if: ${{ github.event.release.prerelease }}
        name: Reflect failure in pre-release title
        env:
          GH_TOKEN: "${{ secrets.COREINT_BOT_TOKEN }}"
        run: |
          gh release edit ${{ github.event.release.tag_name }} --title "${{ github.event.release.tag_name }} (pre-release-failure)"
      
      - if: ${{ ! github.event.release.prerelease }}
        name: Reflect failure in release title
        env:
          GH_TOKEN: "${{ secrets.COREINT_BOT_TOKEN }}"
        run: |
          gh release edit ${{ github.event.release.tag_name }} --title "${{ github.event.release.tag_name }} (release-failure)"